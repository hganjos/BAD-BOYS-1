Introdução ao Wazuh
O Wazuh é uma plataforma de segurança unificada e gratuita que oferece:

SIEM (Security Information and Event Management)
XDR (Extended Detection and Response) Detecção
de intrusões (HIDS/NIDS)
Monitoramento de conformidade
Análise de vulnerabilidades
Resposta a incidentes

Principais Características

✅ Open Source e gratuito
✅ Escalável para milhares de agentes
✅ Multiplataforma (Windows, Linux, macOS)
✅ Integração com ferramentas de terceiros
✅ Interface web intuitiva
✅ API RESTful completa

Arquitetura do Wazuh ┌─────────────────┐ ┌─────────────────┐ ┌─────────────────
│ Agente Wazuh │ │ Gerente Wazuh │ │ Painel Wazuh │
│ │────│ │────│ │
│ • Coleta de logs │ │ • Mecanismo de regras │ │ • Interface da Web │
│ • FIM │ │ • Alertas │ │ • Visualizações│
│ • Detecção de rootkit. │ │ • API │ │ • Relatórios │
└─────────────────┘ └─────────────────┘ └─────────────────┘
Componentes Principais

Wazuh Manager: Servidor central que processa dados
Wazuh Agent: Instalado nos endpoints monitorados
Wazuh Dashboard: Interface web para visualização
Elastic Stack: Para indexação e busca de dados

Pré-requisitos
Hardware Recomendado
Wazuh Manager

CPU: 4 núcleos (mínimo), 8 núcleos (recomendado)
RAM: 8 GB (mínimo), 16 GB (recomendado)
Armazenamento: 50 GB (mínimo), 500 GB+ (produção)
Rede: 1 Gbps

Painel Wazuh

CPU: 2 núcleos (mínimo), 4 núcleos (recomendado)
RAM: 4 GB (mínimo), 8 GB (recomendado)
Armazenamento: 20 GB (mínimo)

Software

Sistema Operacional:

Ubuntu 20.04/22.04 LTS
CentOS 7/8 ou RHEL 7/8
Amazon Linux 2

Docker (opcional, para instalação em contêiner)

Configurações de Rede
bash# Portas permissão
1514/udp # Wazuh Agent Communication
1515/tcp # Wazuh Agent Registration
55000/tcp # Wazuh API
443/tcp # Wazuh Dashboard HTTPS
9200/tcp # Elasticsearch (se separado)
5601/tcp # Kibana (se separado)
Instalação do Wazuh Manager
Método 1: Instalação All-in-One (Recomendado para Teste)
Passo 1: Preparação do Sistema
bash# Atualizar o sistema
sudo apt update && sudo apt upgrade -y

Instalar dependências
sudo apt install curl apt-transport-https unzip wget libcap2-bin software-propriedades-comuns -y

Configurar nome do host
sudo hostnamectl set-hostname wazuh-server
echo "127.0.0.1 wazuh-server" | sudo tee -a /etc/hosts
Passo 2: Baixe o instalador
bash# Baixe o instalador oficial
curl -sO https://packages.wazuh.com/4.7/wazuh-install.sh

Baixar arquivo de configuração
curl -sO https://packages.wazuh.com/4.7/config.yml
Passo 3: Configurar o Arquivo de Instalação
bash# Editar arquivo de configuração
sudo nano config.yml
Exemplo de configuração básica:
yaml# config.yml
nós:

Nós indexadores Wazuh
indexador:
- nome: nó-1
ip: "192.168.1.100"
#- nome: nó-2
# ip: ""
#- nome: nó-3
# ip: ""

Nós do servidor Wazuh
servidor:
- nome: wazuh-1
ip: "192.168.1.100"
#- nome: wazuh-2
# ip: ""

Nós do painel Wazuh
dashboard:
- name: dashboard
ip: "192.168.1.100"
Passo 4: Executar a Instalação bash
# Dar permissão de execução
chmod +x wazuh-install.sh

Executar instalação completa
sudo bash wazuh-install.sh -a

Ou instalação passo a passo
sudo bash wazuh-install.sh --wazuh-indexer nó-1
sudo bash wazuh-install.sh --start-cluster
sudo bash wazuh-install.sh --wazuh-server wazuh-1
sudo bash wazuh-install.sh --wazuh-dashboard painel
Método 2: Manual de Instalação por Componentes
Instalação do Wazuh Indexer (Elasticsearch)
bash# Instalar chave GPG
curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/wazuh.gpg --import && chmod 644 /usr/share/keyrings/wazuh.gpg

Adicionar repositório
echo "deb [assinado por=/usr/share/keyrings/wazuh.gpg] https://packages.wazuh.com/4.x/apt/ stable main" | tee -a /etc/apt/sources.list.d/wazuh.list

Atualizar e instalar
apt-get update
apt-get install wazuh-indexer -y
Configuração do Wazuh Indexer
bash# Editar configuração
sudo nano /etc/wazuh-indexer/opensearch.yml
yaml# opensearch.yml - Configuração básica
network.host: "192.168.1.100"
node.name: "node-1"
cluster.initial_master_nodes:

"node-1"
cluster.name: "wazuh-cluster"
node.master: verdadeiro
node.data: verdadeiro
caminho.data: /var/lib/wazuh-indexer
path.logs: /var/log/wazuh-indexer
Configurações de segurança
plugins.security.ssl.transport.pemcert_filepath: certs/node-1.pem
plugins.security.ssl.transport.pemkey_filepath: certs/node-1-key.pem
plugins.security.ssl.transport.pemtrustedcas_filepath: certs/root-ca.pem
plugins.security.ssl.http.enabled: true
plugins.security.ssl.http.pemcert_filepath: certs/node-1.pem
plugins.security.ssl.http.pemkey_filepath: certs/node-1-key.pem
plugins.security.ssl.http.pemtrustedcas_filepath: certs/root-ca.pem
plugins.security.allow_unsafe_democertificates: true
plugins.security.allow_default_init_securityindex: true
Instalação do Wazuh Manager
bash# Instalar Gerenciador Wazuh
apt-get install wazuh-manager -y

Habilitar e iniciar serviço
systemctl daemon-reload
systemctl enable wazuh-manager
systemctl start wazuh-manager
Instalação do Wazuh Dashboard
bash# Instalar o Wazuh Dashboard
apt-get install wazuh-dashboard -y

Configurar painel
sudo nano /etc/wazuh-dashboard/opensearch_dashboards.yml
yaml# opensearch_dashboards.yml
server.host: 192.168.1.100
server.port: 443
opensearch.hosts: https://192.168.1.100:9200
opensearch.ssl.verificationMode: certificado
opensearch.username: kibanaserver
opensearch.password: kibanaserver
opensearch.requestHeadersWhitelist: ["securitytenant","Autorização"]
opensearch_security.multitenancy.enabled: false
opensearch_security.readonly_mode.roles: ["kibana_read_only"]
server.ssl.enabled: true
server.ssl.key: "/etc/wazuh-dashboard/certs/dashboard-key.pem"
server.ssl.certificate: "/etc/wazuh-dashboard/certs/dashboard.pem"
opensearch.ssl.certificateAuthorities: ["/etc/wazuh-dashboard/certs/root-ca.pem"]
Configuração do Wazuh Agent
Instalação no Windows
Download e Instalação
powershell# PowerShell - Download do agente
Invoke-WebRequest -Uri " https://packages.wazuh.com/4.x/windows/wazuh-agent-4.7.0-1.msi " -OutFile "wazuh-agent.msi"

Instalação silenciosa
msiexec.exe /i wazuh-agent.msi /q WAZUH_MANAGER="192.168.1.100" WAZUH_REGISTRATION_SERVER="192.168.1.100" WAZUH_AGENT_NAME="Windows-PC-01"
Manual de Configuração
xml
<ossec_config>



192.168.1.100
1514
udp

windows
<notify_time>10</notify_time>
60
<auto_restart>sim</auto_restart>
eventchannel Segurança eventchannel Sistema no 43200 C:\Windows\System32 C:\Program Files no 43200 Instalação no Linux (Ubuntu/Debian) bash# Adicionar repositório curl -s https://packages.wazuh.com/key/GPG-KEY-WAZUH | gpg --no-default-keyring --keyring gnupg-ring:/usr/share/keyrings/wazuh.gpg --import && chmod 644 /usr/share/keyrings/wazuh.gpg
echo "deb [assinado por=/usr/share/keyrings/wazuh.gpg] https://packages.wazuh.com/4.x/apt/ stable main" | tee -a /etc/apt/sources.list.d/wazuh.list

Instalar Agente
apt update
WAZUH_MANAGER="192.168.1.100" apt install wazuh-agent -y

Configurar e iniciar
systemctl daemon-reload
systemctl enable wazuh-agent
systemctl start wazuh-agent
Registro de Agentes
bash# No Wazuh Manager - Listar agentes pendentes
/var/ossec/bin/agent_control -l

Aceitar agente específico
/var/ossec/bin/manage_agents -i <id_do_agente>

Aceitar todos os agentes pendentes
/var/ossec/bin/manage_agents -a

Reiniciar gerente após aceitar agentes
systemctl restart wazuh-manager
Configuração de Monitoramento
Configuração do Manager
xml
<ossec_config>

<jsonout_output>yes</jsonout_output>
<alerts_log>yes</alerts_log>
no
<logall_json>no</logall_json>
<email_notification>yes</email_notification>
<smtp_server>smtp.empresa.com</smtp_server>
<email_from> wazuh@empresa.com </email_from>
<email_to> admin@empresa.com </email_to>

3 12 seguro 1514 udp 131072 não sim sim sim sim sim sim 43200 não 43200 sim
<!-- Linux directories -->
<directories check_all="yes">/etc,/usr/bin,/usr/sbin</directories>
<directories check_all="yes">/bin,/sbin,/boot</directories>

<!-- Ignore files -->
<ignore>/etc/mtab</ignore>
<ignore>/etc/hosts.deny</ignore>
<ignore>/etc/mail/statistics</ignore>
<ignore>/etc/random-seed</ignore>
<ignore>/etc/adjtime</ignore>
<ignore>/etc/httpd/logs</ignore>
Regras Personalizadas Criando Regras Personalizadas bash# Criar arquivo de regras personalizadas sudo nano /var/ossec/etc/rules/local_rules.xml xml 5716 192.168.1.0/24 Falha de login SSH da rede interna authentication_failed,pci_dss_10.2.4,pci_dss_10.2.5, 100001 Várias falhas de login SSH da rede interna T1110 authentication_failures,pci_dss_10.2.4,pci_dss_10.2.5, 60122 3 Falha de logon na rede do Windows authentication_failed,windows, 60137 Conta de usuário do Windows bloqueada account_locked,windows,pci_dss_10.2.5, 31103 union select|concat\(|information_schema Possível ataque de injeção de SQL T1190 31103 script>|javascript:|onerror= Possível ataque XSS T1059 Decodificadores Personalizados xml ^custom-app custom-app Usuário (\w+) logado de (\S+) user,srcip custom-app ERRO: (\w+) - (.+) error_code,error_message Integração com Active Directory Configuração para Monitoramento do AD xml eventchannel Directory Service eventchannel DNS Server eventchannel File Replication Service C:\Windows\NTDS C:\Windows\SYSVOL Regras específicas para Active Directory xml 60136 \.+ Active Directory: Conta de usuário criada adduser,pci_dss_10.2.5, 60139 Active Directory: Conta de usuário excluída account_changed,pci_dss_10.2.5, 60132,60133 Active Directory: Associação de grupo alterada adduser,pci_dss_10.2.5, 60108 3 Active Directory: Bem-sucedido autenticação de rede authentication_success,pci_dss_10.2.5, Configuração de CIS Benchmarks Ativação do CIS-CAT bash# Download do CIS-CAT wget https://workbench.cisecurity.org/files/2555 -O cis-cat-pro-dashboard-v4.0.23.zip
Extrair e configurar
descompacte cis-cat-pro-dashboard-v4.0.23.zip
sudo mv cis-cat-pro-dashboard /var/ossec/wodles/

Configuração no ossec.conf
xml
não
1800
1d
sim

<java_path>/usr/bin/java</java_path>
<ciscat_path>/var/ossec/wodles/cis-cat-pro-dashboard</ciscat_path>

xccdf_org.cisecurity.benchmarks_profile_Level_2_-_Server Dashboards e Alertas Configuração de Email Alerts xml sim smtp.gmail.com wazuh@empresa.com admin@empresa.com 12 Wazuh SIEM
<email_alerts>
<email_to> security@empresa.com </email_to>
10
<rule_id>100002,100004</rule_id>
full
</email_alerts>
Configuração Integração com Slack
xml
slack
<hook_url> https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK </hook_url>
<alert_format>json</alert_format>
10

Scripts de Resposta Automática
bash#!/bin/bash

/var/ossec/resposta-ativa/bin/block-ip.sh
Bloquear endereço IP usando iptables
IP=$1
AÇÃO=$2

if [ "$ACTION" = "add" ]; then
iptables -I INPUT -s $IP -j DROP
echo "$(date) - IP bloqueado: $IP" >> /var/ossec/logs/active-response.log
elif [ "$ACTION" = "delete" ]; then
iptables -D INPUT -s $IP -j DROP
echo "$(date) - IP desbloqueado: $IP" >> /var/ossec/logs/active-response.log
fi
Ajuste de desempenho
Otimização do Manager
xml

<logall_json>no</logall_json>
<memory_size>128</memory_size>
<white_list>192.168.1.0/24</white_list>

seguro 1514 udp 131072 sim não 1515 não sim não ALTO:!ADH:!EXP:!MD5:!RC4:!3DES:!CAMELLIA:@strength Configuração de rotação de log bash# /etc/logrotate.d/wazuh /var/ossec/logs/alerts/alerts.log { daily missingok rotate 365 compress delaycompress create 640 ossec ossec postrotate /bin/kill -HUP `cat /var/ossec/var/run/.daemon_wazuh-logcollector.pid 2> /dev/null` 2> /dev/null || true endscript }
/var/ossec/logs/alerts/alerts.json {
daily
missingok
rotate 90
compress
delaycompress
create 640 ossec ossec
}
Solução de
problemas Comandos de diagnóstico
bash# Status dos serviços
systemctl status wazuh-manager
systemctl status wazuh-indexer
systemctl status wazuh-dashboard

Verifique a conectividade dos agentes
/var/ossec/bin/agent_control -l

Teste de configuração
/var/ossec/bin/ossec-logtest

Registros importantes
tail -f /var/ossec/logs/ossec.log
tail -f /var/ossec/logs/alerts/alerts.log

Verificar regras ativas
/var/ossec/bin/ossec-logtest -t

Depuração de agente específico
/var/ossec/bin/agent_control -i 001
Problemas comuns

Agente não conecta
bash# Verifique
o status do firewall ufw
iptables -L
Verifique a configuração do agente
cat /var/ossec/etc/ossec.conf | grep -A5 -B5 servidor

Reiniciar agente
systemctl restart wazuh-agent
2. Dashboard não carrega
bash# Verifique logs do dashboard
tail -f /var/log/wazuh-dashboard/wazuh-dashboard.log

Verifique conectividade com indexador
curl -k -u admin:admin https://localhost:9200

Reiniciar serviços
systemctl restart wazuh-dashboard
3. Muitos alertas de falso positivo
xml

<if_sid>5715</if_sid>
192.168.1.100
Ignore SSH from admin server

Monitoramento e Manutenção
Scripts de Manutenção
bash#!/bin/bash

/opt/wazuh-manutenção.sh
Verificar espaço em disco
DISK_USAGE=$(df /var/ossec | awk 'NR==2 {print $5}' | sed 's/%//')
if [ $DISK_USAGE -gt 80 ]; then
echo "ALERT: O uso do disco está em ${DISK_USAGE}%"
# Limpar logs antigos
find /var/ossec/logs -name " .log. " -mtime +30 -delete
fi

Verificar agentes inativos
INACTIVE_AGENTS=$(/var/ossec/bin/agent_control -l | grep "Desconectado" | wc -l)
if [ $INACTIVE_AGENTS -gt 0 ]; then
echo "AVISO: os agentes $INACTIVE_AGENTS estão desconectados"
fi

Backup da configuração
tar -czf /backup/wazuh-config-$(date +%Y%m%d).tar.gz /var/ossec/etc/
Crontab para Automação
bash# Adicionar ao crontab
crontab -e

Manutenção diária às 2h
0 2 * * * /opt/wazuh-maintenance.sh

Backup semanal
0 3 * * 0 tar -czf /backup/wazuh-full-$(date +%Y%m%d).tar.gz /var/ossec/
Referências
Documentação Oficial

Documentação Wazuh
Guia de instalação do Wazuh
Manual do usuário do Wazuh

Recursos Adicionais

Conjunto de regras do Wazuh Fóruns da comunidade
do Docker do Wazuh

Integrações

Integração MISP Integração
Slack
Integrações personalizadas
